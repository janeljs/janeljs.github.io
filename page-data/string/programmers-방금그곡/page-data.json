{"componentChunkName":"component---src-templates-blog-post-js","path":"/string/programmers-방금그곡/","result":{"data":{"site":{"siteMetadata":{"title":"Jane's PS Blog","author":"[Jisun Lim]","siteUrl":"https://janeljs.github.io","comment":{"disqusShortName":"","utterances":"janeljs/janeljs.github.io"},"sponsor":{"buyMeACoffeeId":"janeljs"}}},"markdownRemark":{"id":"b799a64a-ebae-58ed-8544-fbca262f4808","excerpt":"https://programmers.co.kr/learn/courses/30/lessons/17683 Solution 문제를 제대로 안 읽어서 헤맸다. 조건이 일치하는 음악이 여러 개일 때에는 라디오에서 재생된 시간이 제일 긴 음악 제목을 반환한다. 재생된 시간도 같을 경우 먼저 입력된 음악 제목을 반환한다. 조건을 반영한 다음에도 20, 21, 3…","html":"<ul>\n<li><a href=\"https://programmers.co.kr/learn/courses/30/lessons/17683\">https://programmers.co.kr/learn/courses/30/lessons/17683</a></li>\n</ul>\n<h2 id=\"solution\" style=\"position:relative;\"><a href=\"#solution\" aria-label=\"solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Solution</h2>\n<ul>\n<li>\n<p>문제를 제대로 안 읽어서 헤맸다.</p>\n<ul>\n<li>조건이 일치하는 음악이 여러 개일 때에는 라디오에서 <strong>재생된 시간이 제일 긴</strong> 음악 제목을 반환한다.</li>\n<li>재생된 시간도 같을 경우 먼저 입력된 음악 제목을 반환한다.</li>\n</ul>\n</li>\n<li>조건을 반영한 다음에도 20, 21, 30번이 통과되지 않는다.</li>\n<li>\n<p>아래 조건을 빼먹었다.</p>\n<ul>\n<li>음악 길이보다 재생된 시간이 짧을 때는 처음부터 재생 시간만큼만 재생된다.</li>\n</ul>\n</li>\n<li>마지막으로 재생시간으로 정렬시 <code class=\"language-text\">reverse = True</code>를 빼먹었다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> musicinfos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dic <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    m <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> music <span class=\"token keyword\">in</span> musicinfos<span class=\"token punctuation\">:</span>\n        start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> melody <span class=\"token operator\">=</span> music<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span>\n\n        temp <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>datetime<span class=\"token punctuation\">.</span>strptime<span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">,</span> <span class=\"token string\">'%H:%M'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> datetime<span class=\"token punctuation\">.</span>strptime<span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> <span class=\"token string\">'%H:%M'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        minute <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        hour <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        duration <span class=\"token operator\">=</span> minute <span class=\"token operator\">+</span> hour <span class=\"token operator\">*</span> <span class=\"token number\">60</span>\n\n        melody <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>melody<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> duration <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>melody<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            dic<span class=\"token punctuation\">[</span>title<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>melody<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>duration<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> duration<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            q<span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> <span class=\"token builtin\">divmod</span><span class=\"token punctuation\">(</span>duration<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>melody<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            dic<span class=\"token punctuation\">[</span>title<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>melody <span class=\"token operator\">*</span> q <span class=\"token operator\">+</span> melody<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> duration<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> dic<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> m <span class=\"token keyword\">in</span> value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        answer <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'(None)'</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> m<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'C#'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'D#'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'F#'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'G#'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'A#'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"Programmers 방금그곡","date":"July 27, 2021"}}},"pageContext":{"slug":"/string/programmers-방금그곡/","previous":{"fields":{"slug":"/algorithms/programmers-압축/"},"frontmatter":{"title":"Programmers 압축","category":"algorithms","draft":false}},"next":{"fields":{"slug":"/dynamic programming/programmers-가장-큰-정사각형-찾기/"},"frontmatter":{"title":"Programmers 가장 큰 정사각형 찾기","category":"dynamic programming","draft":false}}}},"staticQueryHashes":["3128451518","3260639066"]}