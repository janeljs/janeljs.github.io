{"componentChunkName":"component---src-templates-blog-post-js","path":"/stack/programmers-다리를-지나는-트럭/","result":{"data":{"site":{"siteMetadata":{"title":"Jane's PS Blog","author":"[Jisun Lim]","siteUrl":"https://janeljs.github.io","comment":{"disqusShortName":"","utterances":"janeljs/janeljs.github.io"},"sponsor":{"buyMeACoffeeId":"janeljs"}}},"markdownRemark":{"id":"b91abc01-d79a-59f2-8527-d4262a23ca01","excerpt":"https://programmers.co.kr/learn/courses/30/lessons/42583 Solution 시간 초과 판정을 받았다. 2차 시도 매 순간 sum 함수를 실행하는데 O(N)의 시간이 들어 시간 초과가 뜬 거였다. 클래스를 이용한 풀이","html":"<ul>\n<li><a href=\"https://programmers.co.kr/learn/courses/30/lessons/42583\">https://programmers.co.kr/learn/courses/30/lessons/42583</a></li>\n</ul>\n<h2 id=\"solution\" style=\"position:relative;\"><a href=\"#solution\" aria-label=\"solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Solution</h2>\n<ul>\n<li>시간 초과 판정을 받았다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>bridge_length<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">,</span> truck_weights<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    truck_weights <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span>truck_weights<span class=\"token punctuation\">)</span>\n    truck_crossing_bridge <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> bridge_length<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> truck_crossing_bridge<span class=\"token punctuation\">:</span>\n        answer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        truck_crossing_bridge<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> truck_weights<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>truck_crossing_bridge<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> truck_weights<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> weight<span class=\"token punctuation\">:</span>\n                truck_crossing_bridge<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>truck_weights<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                truck_crossing_bridge<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<ul>\n<li>\n<p>2차 시도</p>\n<ul>\n<li>매 순간 sum 함수를 실행하는데 O(N)의 시간이 들어 시간 초과가 뜬 거였다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>bridge_length<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">,</span> truck_weights<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    truck_weights <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span>truck_weights<span class=\"token punctuation\">)</span>\n    truck_crossing_bridge <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> bridge_length<span class=\"token punctuation\">)</span>\n    tcb_weight <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">while</span> truck_crossing_bridge<span class=\"token punctuation\">:</span>\n        answer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        tcb_weight <span class=\"token operator\">-=</span> truck_crossing_bridge<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> truck_weights<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> tcb_weight <span class=\"token operator\">+</span> truck_weights<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> weight<span class=\"token punctuation\">:</span>\n                temp <span class=\"token operator\">=</span> truck_weights<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                tcb_weight <span class=\"token operator\">+=</span> temp\n                truck_crossing_bridge<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                truck_crossing_bridge<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<ul>\n<li>클래스를 이용한 풀이</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> collections\n\nDUMMY_TRUCK <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Bridge</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_max_length <span class=\"token operator\">=</span> length\n        self<span class=\"token punctuation\">.</span>_max_weight <span class=\"token operator\">=</span> weight\n        self<span class=\"token punctuation\">.</span>_queue <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>_current_weight <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">push</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> truck<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        next_weight <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_current_weight <span class=\"token operator\">+</span> truck\n        <span class=\"token keyword\">if</span> next_weight <span class=\"token operator\">&lt;=</span> self<span class=\"token punctuation\">.</span>_max_weight <span class=\"token keyword\">and</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_queue<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>_max_length<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>_queue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>truck<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>_current_weight <span class=\"token operator\">=</span> next_weight\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pop</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        item <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_queue<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>_current_weight <span class=\"token operator\">-=</span> item\n        <span class=\"token keyword\">return</span> item\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__len__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_queue<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__repr__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'Bridge({}/{} : [{}])'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_current_weight<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>_max_weight<span class=\"token punctuation\">,</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_queue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>bridge_length<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">,</span> truck_weights<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    bridge <span class=\"token operator\">=</span> Bridge<span class=\"token punctuation\">(</span>bridge_length<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">)</span>\n    trucks <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>deque<span class=\"token punctuation\">(</span>w <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> truck_weights<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>bridge_length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        bridge<span class=\"token punctuation\">.</span>push<span class=\"token punctuation\">(</span>DUMMY_TRUCK<span class=\"token punctuation\">)</span>\n\n    count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">while</span> trucks<span class=\"token punctuation\">:</span>\n        bridge<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> bridge<span class=\"token punctuation\">.</span>push<span class=\"token punctuation\">(</span>trucks<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            trucks<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            bridge<span class=\"token punctuation\">.</span>push<span class=\"token punctuation\">(</span>DUMMY_TRUCK<span class=\"token punctuation\">)</span>\n\n        count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">while</span> bridge<span class=\"token punctuation\">:</span>\n        bridge<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">return</span> count\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"Programmers 다리를 지나는 트럭","date":"August 06, 2021"}}},"pageContext":{"slug":"/stack/programmers-다리를-지나는-트럭/","previous":{"fields":{"slug":"/algorithms/programmers-쿼드압축-후-개수-세기/"},"frontmatter":{"title":"Programmers 쿼드압축 후 개수 세기","category":"algorithms","draft":false}},"next":{"fields":{"slug":"/algorithms/programmers-튜플/"},"frontmatter":{"title":"Programmers 튜플","category":"algorithms","draft":false}}}},"staticQueryHashes":["3128451518","3260639066"]}