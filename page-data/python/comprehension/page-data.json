{"componentChunkName":"component---src-templates-blog-post-js","path":"/python/comprehension/","result":{"data":{"site":{"siteMetadata":{"title":"Jane's PS Blog","author":"[Jisun Lim]","siteUrl":"https://janeljs.github.io","comment":{"disqusShortName":"","utterances":"janeljs/janeljs.github.io"},"sponsor":{"buyMeACoffeeId":"janeljs"}}},"markdownRemark":{"id":"c0423806-9524-551c-8e97-fd0e41ce4364","excerpt":"Python comprehension 다른 Sequence로 부터 새로운 Sequence (Iterable Object)를 만들 수 있는 기능 List comprehension 사용 방법 입력 Sequence는 반복이 가능한 데이터 Sequence 혹은 컬렉션 if 조건식 입력은 optional하다. 활용 예시 종류가 다른 데이터에서 정수 리스트만 가져오기 응용하기 List comprehension을 사용해서 1~20까지의 숫자 중 3으로 나누어 떨어지는 수만 출력하기 List…","html":"<h1 id=\"python-comprehension\" style=\"position:relative;\"><a href=\"#python-comprehension\" aria-label=\"python comprehension permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Python comprehension</h1>\n<p>다른 Sequence로 부터 새로운 Sequence (Iterable Object)를 만들 수 있는 기능</p>\n<h2 id=\"list-comprehension\" style=\"position:relative;\"><a href=\"#list-comprehension\" aria-label=\"list comprehension permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>List comprehension</h2>\n<h3 id=\"사용-방법\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9-%EB%B0%A9%EB%B2%95\" aria-label=\"사용 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용 방법</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">[</span>출력표현식 <span class=\"token keyword\">for</span> 요소 <span class=\"token keyword\">in</span> 입력Sequence <span class=\"token punctuation\">[</span><span class=\"token keyword\">if</span> 조건식<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>입력 Sequence는 반복이 가능한 데이터 Sequence 혹은 컬렉션</li>\n<li>if 조건식 입력은 optional하다.</li>\n</ul>\n<h3 id=\"활용-예시\" style=\"position:relative;\"><a href=\"#%ED%99%9C%EC%9A%A9-%EC%98%88%EC%8B%9C\" aria-label=\"활용 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>활용 예시</h3>\n<ul>\n<li>\n<p>종류가 다른 데이터에서 정수 리스트만 가져오기</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">mylist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9.9</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Love'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">]</span>\nint_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> mylist <span class=\"token keyword\">if</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>int_data<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># Result</span>\n<span class=\"token punctuation\">[</span>5<span class=\"token punctuation\">,</span> 15<span class=\"token punctuation\">,</span> 100<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n<li>\n<p>응용하기</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">mylist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9.9</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Love'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">]</span>\nint_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> mylist <span class=\"token keyword\">if</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span>\nint_square_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>y <span class=\"token operator\">*</span> y <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> mylist <span class=\"token keyword\">if</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span>\nboolean_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>z <span class=\"token keyword\">for</span> z <span class=\"token keyword\">in</span> mylist <span class=\"token keyword\">if</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>int_data<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>int_square_data<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>boolean_data<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># Result</span>\n<span class=\"token punctuation\">[</span>5<span class=\"token punctuation\">,</span> 15<span class=\"token punctuation\">,</span> 100<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span>25<span class=\"token punctuation\">,</span> 225<span class=\"token punctuation\">,</span> 10000<span class=\"token punctuation\">]</span>\n<span class=\"token namespace\">[False, True]</span></code></pre></div>\n</li>\n<li>\n<p>List comprehension을 사용해서 1~20까지의 숫자 중 3으로 나누어 떨어지는 수만 출력하기</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> x <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># Result</span>\n<span class=\"token punctuation\">[</span>3<span class=\"token punctuation\">,</span> 6<span class=\"token punctuation\">,</span> 9<span class=\"token punctuation\">,</span> 12<span class=\"token punctuation\">,</span> 15<span class=\"token punctuation\">,</span> 18<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n<li>\n<p>List comprehension을 사용해서 1~20까지의 숫자 중 3 또는 7로 나누어 떨어지지 않는 수만 출력하기</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> x <span class=\"token operator\">%</span> <span class=\"token number\">7</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># Result</span>\n<span class=\"token punctuation\">[</span>1<span class=\"token punctuation\">,</span> 2<span class=\"token punctuation\">,</span> 4<span class=\"token punctuation\">,</span> 5<span class=\"token punctuation\">,</span> 8<span class=\"token punctuation\">,</span> 10<span class=\"token punctuation\">,</span> 11<span class=\"token punctuation\">,</span> 13<span class=\"token punctuation\">,</span> 16<span class=\"token punctuation\">,</span> 17<span class=\"token punctuation\">,</span> 19<span class=\"token punctuation\">,</span> 20<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"set-comprehension\" style=\"position:relative;\"><a href=\"#set-comprehension\" aria-label=\"set comprehension permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set comprehension</h2>\n<h3 id=\"사용-방법-1\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9-%EB%B0%A9%EB%B2%95-1\" aria-label=\"사용 방법 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용 방법</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">{</span>출력표현식 <span class=\"token keyword\">for</span> 요소 <span class=\"token keyword\">in</span> 입력Sequence <span class=\"token punctuation\">[</span><span class=\"token keyword\">if</span> 조건식<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>입력 Sequence로부터 조건에 맞는 새로운 Set 컬렉션 반환</li>\n<li>if 조건식 입력은 optional하다.</li>\n</ul>\n<h3 id=\"활용-예시-1\" style=\"position:relative;\"><a href=\"#%ED%99%9C%EC%9A%A9-%EC%98%88%EC%8B%9C-1\" aria-label=\"활용 예시 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>활용 예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">int_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span>\ndata_set <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>num <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> int_data<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data_set<span class=\"token punctuation\">)</span>\n\ndata_set_under_condition <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>num <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> int_data <span class=\"token keyword\">if</span> num <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data_set_under_condition<span class=\"token punctuation\">)</span>\n\nsquare_data_set <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>num <span class=\"token operator\">*</span> num <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> int_data <span class=\"token keyword\">if</span> num <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>square_data_set<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># Result</span>\n<span class=\"token punctuation\">{</span>1<span class=\"token punctuation\">,</span> 2<span class=\"token punctuation\">,</span> 3<span class=\"token punctuation\">,</span> 4<span class=\"token punctuation\">,</span> 6<span class=\"token punctuation\">,</span> 7<span class=\"token punctuation\">,</span> 8<span class=\"token punctuation\">,</span> 9<span class=\"token punctuation\">}</span> <span class=\"token comment\"># 집합 출력</span>\n<span class=\"token punctuation\">{</span>4<span class=\"token punctuation\">,</span> 6<span class=\"token punctuation\">,</span> 7<span class=\"token punctuation\">,</span> 8<span class=\"token punctuation\">,</span> 9<span class=\"token punctuation\">}</span> <span class=\"token comment\"># 조건에 맞는 집합 출력</span>\n<span class=\"token punctuation\">{</span>64<span class=\"token punctuation\">,</span> 36<span class=\"token punctuation\">,</span> 16<span class=\"token punctuation\">,</span> 49<span class=\"token punctuation\">,</span> 81<span class=\"token punctuation\">}</span> <span class=\"token comment\"># 제곱된 수로 구성된 집합 출력</span></code></pre></div>\n<h2 id=\"dictionary-comprehension\" style=\"position:relative;\"><a href=\"#dictionary-comprehension\" aria-label=\"dictionary comprehension permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dictionary comprehension</h2>\n<h3 id=\"사용-방법-2\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9-%EB%B0%A9%EB%B2%95-2\" aria-label=\"사용 방법 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용 방법</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">{</span>Key<span class=\"token punctuation\">:</span>Value <span class=\"token keyword\">for</span> 요소 <span class=\"token keyword\">in</span> 입력Sequence <span class=\"token punctuation\">[</span><span class=\"token keyword\">if</span> 조건식<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>입력 Sequence로부터 조건에 맞는 새로운 Set 컬렉션 반환</li>\n<li>if 조건식 입력은 optional하다.</li>\n</ul>\n<h3 id=\"활용-예시-2\" style=\"position:relative;\"><a href=\"#%ED%99%9C%EC%9A%A9-%EC%98%88%EC%8B%9C-2\" aria-label=\"활용 예시 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>활용 예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">id_name <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Dave'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'David'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Anthony'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Jane'</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>id_name<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 아이디가 2이상인 데이터를 이름:아이디 형식으로 새로운 set 만들기</span>\nname_id <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">:</span>key <span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span>val <span class=\"token keyword\">in</span> id_name<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> key <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name_id<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># key 해싱 (2n-1)</span>\nname_id <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>key <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>val <span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span>val <span class=\"token keyword\">in</span> id_name<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name_id<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># Result</span>\ndict_items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>1<span class=\"token punctuation\">,</span> <span class=\"token string\">'Dave'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>2<span class=\"token punctuation\">,</span> <span class=\"token string\">'David'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>3<span class=\"token punctuation\">,</span> <span class=\"token string\">'Anthony'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>4<span class=\"token punctuation\">,</span> <span class=\"token string\">'Jane'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'Anthony'</span>: 3<span class=\"token punctuation\">,</span> <span class=\"token string\">'Jane'</span>: 4<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span>1: <span class=\"token string\">'Dave'</span><span class=\"token punctuation\">,</span> 3: <span class=\"token string\">'David'</span><span class=\"token punctuation\">,</span> 5: <span class=\"token string\">'Anthony'</span><span class=\"token punctuation\">,</span> 7: <span class=\"token string\">'Jane'</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p><strong><em>Source</em></strong></p>\n<p><a href=\"https://www.fun-coding.org/PL&#x26;OOP5-2.html\">https://www.fun-coding.org/PL&#x26;OOP5-2.html</a></p>","frontmatter":{"title":"[python] 컴프리헨션(Comprehension)","date":"October 30, 2020"}}},"pageContext":{"slug":"/python/comprehension/","previous":{"fields":{"slug":"/datastructures/set/"},"frontmatter":{"title":"[DS] 집합(Set)","category":"datastructures","draft":false}},"next":{"fields":{"slug":"/datastructures/hash-table/"},"frontmatter":{"title":"[DS] 해시 테이블(Hash table)","category":"datastructures","draft":false}}}},"staticQueryHashes":["3128451518","3260639066"]}