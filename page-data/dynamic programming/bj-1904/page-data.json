{"componentChunkName":"component---src-templates-blog-post-js","path":"/dynamic programming/bj-1904/","result":{"data":{"site":{"siteMetadata":{"title":"Jane's PS Blog","author":"[Jisun Lim]","siteUrl":"https://janeljs.github.io","comment":{"disqusShortName":"","utterances":"janeljs/janeljs.github.io"},"sponsor":{"buyMeACoffeeId":"janeljs"}}},"markdownRemark":{"id":"401f9305-2160-5db2-be50-ac7cccb96216","excerpt":"Description  Input  Output  Solution n을 1부터 나열하다보니 패턴이 보인다. n = 1: 1 n = 2: 00, 11 n = 3: 100, 001, 111 n = 4: 0000, 1100, 1001, 0011, 1111 n = 5: 10000, 00100, 11100, 00001, 11001, 10011, 00111, 11111 n일 때의 2진 수열을 만들기 위해서는 n-2일 때의 모든 수 뒤에 00을 붙이고, n-1일 때의 모든 수 뒤에…","html":"<h2 id=\"description\" style=\"position:relative;\"><a href=\"#description\" aria-label=\"description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a> Description</h2>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">지원이에게 <span class=\"token number\">2</span>진 수열을 가르쳐 주기 위해<span class=\"token punctuation\">,</span> 지원이 아버지는 그에게 타일들을 선물해주셨다<span class=\"token punctuation\">.</span> 그리고 이 각각의 타일들은 <span class=\"token number\">0</span> 또는 <span class=\"token number\">1</span>이 쓰여 있는 낱장의 타일들이다<span class=\"token punctuation\">.</span>\n\n어느 날 짓궂은 동주가 지원이의 공부를 방해하기 위해 <span class=\"token number\">0</span>이 쓰여진 낱장의 타일들을 붙여서 한 쌍으로 이루어진 <span class=\"token number\">00</span> 타일들을 만들었다<span class=\"token punctuation\">.</span> 결국 현재 <span class=\"token number\">1</span> 하나만으로 이루어진 타일 또는 <span class=\"token number\">0</span>타일을 두 개 붙인 한 쌍의 <span class=\"token number\">00</span>타일들만이 남게 되었다<span class=\"token punctuation\">.</span>\n\n그러므로 지원이는 타일로 더 이상 크기가 N인 모든 <span class=\"token number\">2</span>진 수열을 만들 수 없게 되었다<span class=\"token punctuation\">.</span> 예를 들어<span class=\"token punctuation\">,</span> N<span class=\"token operator\">=</span><span class=\"token number\">1</span>일 때 <span class=\"token number\">1</span>만 만들 수 있고<span class=\"token punctuation\">,</span> N<span class=\"token operator\">=</span><span class=\"token number\">2</span>일 때는 <span class=\"token number\">00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span>을 만들 수 있다<span class=\"token punctuation\">.</span> <span class=\"token punctuation\">(</span><span class=\"token number\">01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span>은 만들 수 없게 되었다<span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> 또한 N<span class=\"token operator\">=</span><span class=\"token number\">4</span>일 때는 <span class=\"token number\">0011</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1111</span> 등 총 <span class=\"token number\">5</span>개의 <span class=\"token number\">2</span>진 수열을 만들 수 있다<span class=\"token punctuation\">.</span>\n\n우리의 목표는 N이 주어졌을 때 지원이가 만들 수 있는 모든 가짓수를 세는 것이다<span class=\"token punctuation\">.</span> 단 타일들은 무한히 많은 것으로 가정하자<span class=\"token punctuation\">.</span></code></pre></div>\n<h2 id=\"input\" style=\"position:relative;\"><a href=\"#input\" aria-label=\"input permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a> Input</h2>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">첫 번째 줄에 자연수 N이 주어진다<span class=\"token punctuation\">.</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> ≤ N ≤ <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">000</span><span class=\"token punctuation\">,</span><span class=\"token number\">000</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"output\" style=\"position:relative;\"><a href=\"#output\" aria-label=\"output permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a> Output</h2>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">첫 번째 줄에 지원이가 만들 수 있는 길이가 N인 모든 <span class=\"token number\">2</span>진 수열의 개수를 <span class=\"token number\">15746</span>으로 나눈 나머지를 출력한다<span class=\"token punctuation\">.</span></code></pre></div>\n<h2 id=\"solution\" style=\"position:relative;\"><a href=\"#solution\" aria-label=\"solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a> Solution</h2>\n<ul>\n<li>\n<p>n을 1부터 나열하다보니 패턴이 보인다.</p>\n<ul>\n<li>n = 1: 1</li>\n<li>n = 2: 00, 11</li>\n<li>n = 3: 100, 001, 111</li>\n<li>n = 4: 0000, 1100, 1001, 0011, 1111</li>\n<li>n = 5: 10000, 00100, 11100, 00001, 11001, 10011, 00111, 11111</li>\n</ul>\n</li>\n<li>n일 때의 2진 수열을 만들기 위해서는 n-2일 때의 모든 수 뒤에 00을 붙이고, n-1일 때의 모든 수 뒤에 1을 붙여주면 된다.</li>\n<li>그러므로 길이가 N일 때 만들 수 있는 모든 수열의 수는 n-2 + n-1이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 1차 시도</span>\n\nn <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\narr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000001</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solve</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> x <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n        arr<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x\n        <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> arr<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span>\n    arr<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>solve<span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> solve<span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">15746</span>\n    <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solve<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>아무리 봐도 결과값이 잘 나오는 것 같은데 계속 런타임 에러 판정을 받았다.</li>\n<li>\n<p>드디어 원인을 찾았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">999</span>\n<span class=\"token number\">10903</span></code></pre></div>\n<p>999까지는 위와 같이 문제 없이 출력되지만, 딱 1000부터 RecursionError가 발생한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">1000</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\nFile <span class=\"token string\">\"C:\\Users\\jisun\\PycharmProjects\\codingtest\\bj-1904.py\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solve<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nFile <span class=\"token string\">\"C:\\Users\\jisun\\PycharmProjects\\codingtest\\bj-1904.py\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> solve\n  arr<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>solve<span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> solve<span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">15746</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\nFile <span class=\"token string\">\"C:\\Users\\jisun\\PycharmProjects\\codingtest\\bj-1904.py\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> solve\n  <span class=\"token keyword\">if</span> x <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\nRecursionError<span class=\"token punctuation\">:</span> maximum recursion depth exceeded <span class=\"token keyword\">in</span> comparison</code></pre></div>\n</li>\n<li>재귀 함수를 없애니 해결되었다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\narr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000001</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solve</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        arr<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>x<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> arr<span class=\"token punctuation\">[</span>x<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">15746</span>\n    <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solve<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"feedback\" style=\"position:relative;\"><a href=\"#feedback\" aria-label=\"feedback permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a> Feedback</h2>\n<ul>\n<li>\n<p>다이나믹 프로그래밍</p>\n<ul>\n<li>입력 크기가 작은 부분 문제들을 해결한 후, 해당 부분의 문제의 해를 활용해서 보다 큰 크기의 부분 문제를 해결하고, 최종적으로 전체 문제를 해결하는 알고리즘</li>\n<li>Memoization기법을 활용하여 이전에 계산한 값은 다시 계산하지 않는다.</li>\n</ul>\n</li>\n<li>\n<p>Recursion vs. Iteration</p>\n<ul>\n<li>recursion → iteration, iteration → recursion으로 항상 변경 가능</li>\n<li>recursion 장점: 대체로 복잡한 알고리즘을 쉽게 표현할 수 있게 해준다.</li>\n<li>recursion 단점: 함수 호출에 따른 overhead 존재</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ndp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000001</span>\ndp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\ndp<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">15746</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h1 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p><strong><em>Source</em></strong></p>\n<ul>\n<li><a href=\"https://www.acmicpc.net/problem/1904\">https://www.acmicpc.net/problem/1904</a></li>\n<li><a href=\"https://www.fun-coding.org/Chapter14-dp_divide.html\">https://www.fun-coding.org/Chapter14-dp_divide.html</a></li>\n<li><a href=\"https://github.com/ndb796/Fast_Campus_Algorithm_Lecture_Notes/blob/master/Solutions/%5B12%5D_1.py\">ndb796</a></li>\n</ul>","frontmatter":{"title":"백준 1904번 01타일","date":"January 21, 2021"}}},"pageContext":{"slug":"/dynamic programming/bj-1904/","previous":{"fields":{"slug":"/algorithms/programmers-모의고사/"},"frontmatter":{"title":"Programmers 모의고사","category":"algorithms","draft":false}},"next":{"fields":{"slug":"/greedy/greedy-basic/"},"frontmatter":{"title":"이코테 Chapter 3 그리디","category":"greedy","draft":false}}}},"staticQueryHashes":["3128451518","3260639066"]}